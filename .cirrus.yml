---

# Only github users with write-access can define or use encrypted variables
# Ref: https://cirrus-ci.org/guide/writing-tasks/#encrypted-variables
# more specifically: https://cirrus-ci.com/settings/repository/6707778565701632
gcp_credentials: ENCRYPTED[a28959877b2c9c36f151781b0a05407218cda646c7d047fc556e42f55e097e897ab63ee78369dae141dcf0b46a9d0cdd]

# Default timeout for each task
timeout_in: 120m

# Main collection of env. vars to set for all tasks and scripts.
env:
    ####
    #### Global variables used for all tasks
    ####
    # Name of the ultimate destination branch for this CI run, PR or post-merge.
    DEST_BRANCH: "master"
    # Overrides default location (/tmp/cirrus) for repo clone
    GOPATH: "/var/tmp/go"
    GOBIN: "${GOPATH}/bin"
    GOSRC: "/var/tmp/go/src/github.com/containers/podman"
    CIRRUS_WORKING_DIR: "/var/tmp/go/src/github.com/containers/podman"
    # The default is 'sh' if unspecified
    CIRRUS_SHELL: "/bin/bash"
    # Save a little typing (path relative to $CIRRUS_WORKING_DIR)
    SCRIPT_BASE: "./contrib/cirrus"
    # Command to prefix output lines with timing information
    # (can't do inline awk script, Cirrus-CI or YAML mangles quoting)
    TIMESTAMP: "awk --file ${CIRRUS_WORKING_DIR}/${SCRIPT_BASE}/timestamp.awk"

    # HTMLify ginkgo and bats logs
    LOGFORMAT: "${CIRRUS_WORKING_DIR}/${SCRIPT_BASE}/logformatter"

    ####
    #### Cache-image names to test with (double-quotes around names are critical)
    ###
    FEDORA_NAME: "fedora-32"
    PRIOR_FEDORA_NAME: "fedora-31"
    UBUNTU_NAME: "ubuntu-20"
    PRIOR_UBUNTU_NAME: "ubuntu-19"

    _BUILT_IMAGE_SUFFIX: "podman-6530021898584064"
    FEDORA_CACHE_IMAGE_NAME: "${FEDORA_NAME}-${_BUILT_IMAGE_SUFFIX}"
    PRIOR_FEDORA_CACHE_IMAGE_NAME: "${PRIOR_FEDORA_NAME}-${_BUILT_IMAGE_SUFFIX}"
    UBUNTU_CACHE_IMAGE_NAME: "${UBUNTU_NAME}-${_BUILT_IMAGE_SUFFIX}"
    PRIOR_UBUNTU_CACHE_IMAGE_NAME: "${PRIOR_UBUNTU_NAME}-${_BUILT_IMAGE_SUFFIX}"

    ####
    #### Variables for composing new cache-images (used in PR testing) from
    #### base-images (pre-existing in GCE)
    ####
    BUILT_IMAGE_SUFFIX: "-${CIRRUS_REPO_NAME}-${CIRRUS_BUILD_ID}"
    # Special image w/ nested-libvirt + tools for creating new cache and base images
    IMAGE_BUILDER_CACHE_IMAGE_NAME: "image-builder-image-1541772081"
    # Name where this repositories VM images are stored
    GCP_PROJECT_ID: libpod-218412

    ####
    #### Default to NOT operating in any special-case testing mode
    ####
    SPECIALMODE: "none"  # don't do anything special
    RCLI: 'false'  # don't test remote client by default
    ADD_SECOND_PARTITION: 'false'  # will certainly fail inside containers
    MOD_CONTAINERS_CONF: 'true'  # Update containers.conf runtime if required by OS environment

    ####
    #### Credentials and other secret-sauces, decrypted at runtime when authorized.
    ####
    # Freenode IRC credentials for posting status messages
    IRCID: ENCRYPTED[0c4a3cc4ecda08bc47cd3d31592be8ae5c2bd0151bf3def00a9afd139ef1ab23a1bd0523319d076c027f9749ddb1f3c8]
    # Service-account client_email - needed to build images
    SERVICE_ACCOUNT: ENCRYPTED[702a8e07e27a6faf7988fcddcc068c2ef2bb182a5aa671f5ccb7fbbfb891c823aa4a7856fb17240766845dbd68bd3f90]
    # Service account username part of client_email - for ssh'ing into VMs
    GCE_SSH_USERNAME: 'cirrus-ci'

# Default VM to use unless set or modified by task
gce_instance:
    image_project: $GCP_PROJECT_ID
    zone: "us-central1-a"  # Required by Cirrus for the time being
    cpu: 2
    memory: "4Gb"
    disk: 200
    # A matrix could be used here, for now just one VM
    image_name: "${FEDORA_CACHE_IMAGE_NAME}"


# This task does the unit and integration testing for every platform
testing_task:

    alias: "testing"

    # Only test build cache-images, if that's what's requested
    only_if: >-
        $CIRRUS_CHANGE_MESSAGE !=~ '.*CI:IMG.*' &&
        $CIRRUS_CHANGE_MESSAGE !=~ '.*CI:DOCS.*'

    matrix:
        - name: "test ${FEDORA_NAME}"
          gce_instance:
              image_name: "${FEDORA_CACHE_IMAGE_NAME}"
        - name: "test ${PRIOR_FEDORA_NAME}"
          gce_instance:
              image_name: "${PRIOR_FEDORA_CACHE_IMAGE_NAME}"
        - name: "test ${UBUNTU_NAME}"
          gce_instance:
              image_name: "${UBUNTU_CACHE_IMAGE_NAME}"
        - name: "test ${PRIOR_UBUNTU_NAME}"
          gce_instance:
              image_name: "${PRIOR_UBUNTU_CACHE_IMAGE_NAME}"

    timeout_in: 120m

    env:
        ADD_SECOND_PARTITION: 'true'
        matrix:
          - RCLI: 'true'
          - RCLI: 'false'

    networking_script: '${CIRRUS_WORKING_DIR}/${SCRIPT_BASE}/networking.sh'
    setup_environment_script: '$SCRIPT_BASE/setup_environment.sh'
    unit_test_script: '$SCRIPT_BASE/unit_test.sh'
    integration_test_script: '$SCRIPT_BASE/integration_test.sh'
    system_test_script: '$SCRIPT_BASE/system_test.sh'
    apiv2_test_script: '$SCRIPT_BASE/apiv2_test.sh'

    # When examining a particular run, provide convenient access to release files.
    tar_artifacts:
        path: "*.tar.gz"
        type: "application/x-tar"

    on_failure:
        failed_branch_script: '$CIRRUS_WORKING_DIR/$SCRIPT_BASE/notice_branch_failure.sh'

    always: &standardlogs
        package_versions_script: '$SCRIPT_BASE/logcollector.sh packages'
        ginkgo_node_logs_script: '$SCRIPT_BASE/logcollector.sh ginkgo'
        df_script: '$SCRIPT_BASE/logcollector.sh df'
        audit_log_script: '$SCRIPT_BASE/logcollector.sh audit'
        journal_script: '$SCRIPT_BASE/logcollector.sh journal'
        varlink_script: '$SCRIPT_BASE/logcollector.sh varlink'
        podman_system_info_script: '$SCRIPT_BASE/logcollector.sh podman'
        html_artifacts:
            path: "*.log.html"
            type: "text/html"
