---

# All of these are required
variables:
    # Names of GCE Base images to start from, in .cirrus.yml
    RHEL_BASE_IMAGE: '{{env `RHEL_BASE_IMAGE`}}'
    CENTOS_BASE_IMAGE: '{{env `CENTOS_BASE_IMAGE`}}'
    UBUNTU_BASE_IMAGE: '{{env `UBUNTU_BASE_IMAGE`}}'

    # Fedora / Atomic Host images come by URL, in .cirrus.yml
    FEDORA_IMAGE_PREFIX: '{{env `FEDORA_IMAGE_PREFIX`}}'
    FEDORA_IMAGE_URL: '{{env `FEDORA_IMAGE_URL`}}'
    FEDORA_CSUM_URL: '{{env `FEDORA_CSUM_URL`}}'
    FAH_IMAGE_PREFIX: '{{env `FAH_IMAGE_PREFIX`}}'
    FAH_IMAGE_URL: '{{env `FAH_IMAGE_URL`}}'
    FAH_CSUM_URL: '{{env `FAH_CSUM_URL`}}'

    # libpod dependencies to build and install into images
    FEDORA_CNI_COMMIT: "{{env `FEDORA_CNI_COMMIT`}}"
    CNI_COMMIT: "{{env `CNI_COMMIT`}}"
    CRIO_COMMIT: "{{env `CRIO_COMMIT`}}"
    CRIU_COMMIT: "{{env `CRIU_COMMIT`}}"
    RUNC_COMMIT: "{{env `RUNC_COMMIT`}}"

    CIRRUS_BUILD_ID: '{{env `CIRRUS_BUILD_ID`}}'
    GOSRC: '{{env `GOSRC`}}'
    PACKER_BASE: '{{env `PACKER_BASE`}}'
    SCRIPT_BASE: '{{env `SCRIPT_BASE`}}'

    # Generated by nocloud_floppy() in lib.sh
    CIDATA_IMAGE: '{{env `CIDATA_IMAGE`}}'
    CIDATA_SSH_KEY: '{{env `CIDATA_SSH_KEY`}}'

    # Protected credentials, decrypted by Cirrus at runtime
    GCE_SSH_USERNAME: '{{env `GCE_SSH_USERNAME`}}'
    GCP_PROJECT_ID: '{{env `GCP_PROJECT_ID`}}'
    RHSM_COMMAND: '{{env `RHSM_COMMAND`}}'
    SERVICE_ACCOUNT: '{{env `SERVICE_ACCOUNT`}}'
    GOOGLE_APPLICATION_CREDENTIALS: '{{env `GOOGLE_APPLICATION_CREDENTIALS`}}'

# Don't leak sensitive values in error messages / output
sensitive-variables:
    - 'GCE_SSH_USERNAME'
    - 'GCP_PROJECT_ID'
    - 'RHSM_COMMAND'
    - 'SERVICE_ACCOUNT'

# What images to produce in which cloud
builders:
    #  v----- is a YAML anchor, allows referencing this object by name (below)
    - &gce_hosted_image
      name: 'ubuntu-18'
      type: 'googlecompute'
      image_name: '{{user `UBUNTU_BASE_IMAGE`}}-libpod-{{user `CIRRUS_BUILD_ID`}}'
      image_family: '{{user `UBUNTU_BASE_IMAGE`}}-libpod'
      source_image: '{{user `UBUNTU_BASE_IMAGE`}}'
      project_id: '{{user `GCP_PROJECT_ID`}}'
      service_account_email: '{{user `SERVICE_ACCOUNT`}}'
      communicator: 'ssh'
      ssh_username: '{{user `GCE_SSH_USERNAME`}}'
      ssh_pty: 'true'
      # The only supported zone in Cirrus-CI, as of addition of this comment
      zone: 'us-central1-a'

    #      v----- is a YAML alias, allows partial re-use of the anchor object
    - <<: *gce_hosted_image
      name: 'rhel-7'
      image_name: '{{user `RHEL_BASE_IMAGE`}}-libpod-{{user `CIRRUS_BUILD_ID`}}'
      image_family: '{{user `RHEL_BASE_IMAGE`}}-libpod'
      source_image: '{{user `RHEL_BASE_IMAGE`}}'
      ssh_username: 'ec2-user'

    - <<: *gce_hosted_image
      name: 'centos-7'
      image_family: '{{user `CENTOS_BASE_IMAGE`}}-libpod'
      image_name: '{{user `CENTOS_BASE_IMAGE`}}-libpod-{{user `CIRRUS_BUILD_ID`}}'
      source_image: '{{user `CENTOS_BASE_IMAGE`}}'

    # These images must be imported, requiring use of nested-virtualization.
    - &gce_import_image
      name: 'fedora-28'
      type: 'qemu'
      qemu_binary: '/bin/qemu-kvm'
      accelerator: 'kvm'
      #headless: true
      iso_url: '{{user `FEDORA_IMAGE_URL`}}'
      format: 'qcow2'
      iso_checksum_url: '{{user `FEDORA_CSUM_URL`}}'
      iso_checksum_type: 'sha256'
      disk_image: true
      disk_size: '10240'
      output_directory: "/tmp/{{build_name}}_packer_output"
      vm_name: 'disk.raw'  # Actually the backing-storage file-name
      boot_wait: '2s'
      boot_command:
        - '<enter><wait>'
      shutdown_command: 'sudo shutdown now'
      qemuargs: # List of Lists must be used so packer can override built-in option values
          - - '-m'
            - '1024'
          - - '-cpu'
            - 'host'
          - - '-fda'
            - '{{user `CIDATA_IMAGE`}}'
          - - '-net'
            - 'nic,model=virtio'
          - - '-device'
            - 'isa-serial,chardev=pts2'
          - - '-chardev'
            - 'file,id=pts2,path=/tmp/{{build_name}}_{{user `CIRRUS_BUILD_ID`}}_serial.log'
      communicator: 'ssh'
      ssh_clear_authorized_keys: true
      ssh_private_key_file: '{{user `CIDATA_SSH_KEY`}}'
      ssh_username: 'root'
      ssh_wait_timeout: '10m'

    - <<: *gce_import_image
      name: 'fah-28'
      iso_checksum_url: '{{user `FAH_CSUM_URL`}}'
      iso_url: '{{user `FAH_IMAGE_URL`}}'

# The brains of the operation, making actual modifications to the base-image.
provisioners:
    - type: 'file'
      source: '{{user `GOSRC`}}'
      destination: '/tmp/libpod'

    - type: 'shell'
      only:
          - 'fah-28'
      expect_disconnect: true  # The VM will be rebooted
      script: '{{user `GOSRC`}}/{{user `PACKER_BASE`}}/fah_pre_setup.sh'

    - type: 'shell'
      script: '{{user `GOSRC`}}/{{user `PACKER_BASE`}}/{{split build_name "-" 0}}_setup.sh'
      environment_vars:
          - 'SCRIPT_BASE={{user `SCRIPT_BASE`}}'
          - 'CNI_COMMIT={{user `CNI_COMMIT`}}'
          - 'FEDORA_CNI_COMMIT={{user `FEDORA_CNI_COMMIT`}}'
          - 'CRIO_COMMIT={{user `CRIO_COMMIT`}}'
          - 'CRIU_COMMIT={{user `CRIU_COMMIT`}}'
          - 'RUNC_COMMIT={{user `RUNC_COMMIT`}}'
          - 'RHSM_COMMAND={{user `RHSM_COMMAND`}}'

# Any nested-virt (imported) images, need to be compressed & uploaded.
post-processors:
    # A list-of-lists is required to preserve sequence order
    - - type: 'compress'
        only:
            - 'fedora-28'
            - 'fah-28'
        # Format required by google (tarball of 'disk.raw')
        output: '/tmp/{{build_name}}_packer_output/{{build_name}}-libpod-{{user `CIRRUS_BUILD_ID`}}.tar.gz'
      - type: 'googlecompute-import'
        account_file: '{{user `GOOGLE_APPLICATION_CREDENTIALS`}}'
        only:
            - 'fedora-28'
        # Pre-created, globally-unique storage bucket name
        bucket: 'packer-import'
        image_family: '{{user `FEDORA_IMAGE_PREFIX`}}-libpod'
        image_name: '{{user `FEDORA_IMAGE_PREFIX`}}-libpod-{{user `CIRRUS_BUILD_ID`}}'
        project_id: '{{user `GCP_PROJECT_ID`}}'

      - type: 'googlecompute-import'
        account_file: '{{user `GOOGLE_APPLICATION_CREDENTIALS`}}'
        only:
            - 'fah-28'
        bucket: 'packer-import'
        image_family: '{{user `FAH_IMAGE_PREFIX`}}-libpod'
        image_name: '{{user `FAH_IMAGE_PREFIX`}}-libpod-{{user `CIRRUS_BUILD_ID`}}'
        project_id: '{{user `GCP_PROJECT_ID`}}'

      - type: 'manifest'
        output: '/tmp/packer-manifest.json'
